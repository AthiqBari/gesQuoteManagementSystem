<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        iPDGAAAAAElFTkSuQmCC
</value>
  </data>
</root>